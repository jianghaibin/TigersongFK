//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a Tigersong Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
//     Author:Haibin Jiang
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Xml;
using System.Configuration;

namespace Tigersong.ServiceProvider
{
	public class ServiceProviderConfig : IConfigurationSectionHandler
	{
		/// <summary>
		/// 
		/// </summary>
		public List<Item> Items
		{
			get;
			set;
		}

		/// <summary>
		/// 
		/// </summary>
		public ServiceProviderConfig()
		{
			Items = new List<Item>();
		}

		/// <summary>
		/// 配置服务接口
		/// </summary>
		/// <param name="parent"></param>
		/// <param name="configContext"></param>
		/// <param name="section"></param>
		/// <returns></returns>
		public object Create(object parent, object configContext, XmlNode section)
		{
			ServiceProviderConfig serviceProviderConfig = new ServiceProviderConfig();
			foreach (XmlNode xmlNodes in section.SelectNodes("item"))
			{
				if (xmlNodes == null || xmlNodes.Attributes == null)
				{
					continue;
				}
				Item item = new Item();
				XmlAttribute itemInterface = xmlNodes.Attributes["interface"];
				if (itemInterface == null)
				{
					throw new ApplicationException("配置文件中存在未指定接口的项");
				}
				item.Interface = itemInterface.Value;

				XmlAttribute xmlAttribute = xmlNodes.Attributes["assembly"];
				XmlAttribute itemNamespace = xmlNodes.Attributes["namespace"];
				if (xmlAttribute == null)
				{
					throw new ApplicationException(string.Concat("配置文件接口", item.Interface, "未指定程序集"));
				}
				if (itemNamespace == null)
				{
					throw new ApplicationException(string.Concat("配置文件接口", item.Interface, "未指定命名空间"));
				}
				item.Assembly = xmlAttribute.Value;
				item.NameSpace = itemNamespace.Value;
				serviceProviderConfig.Items.Add(item);
			}
			return serviceProviderConfig;
		}
	}
}
