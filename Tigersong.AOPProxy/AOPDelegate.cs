//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a Tigersong Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
//     Author:Haibin Jiang
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Tigersong.AOPProxy
{
    public class AOPDelegate
    {
        /// <summary>
        /// 进入方法时需要注入的方法
        /// </summary>
        /// <param name="parameter"></param>
        public delegate void OnEntry(string methodName, MethodParameters parameter);
        /// <summary>
        /// 执行发生异常时调用方法
        /// </summary>
        /// <param name="parameter"></param>
        public delegate void OnException(MethodParameters parameter);
        /// <summary>
        /// 方法执行结束前需要注入的方法
        /// </summary>
        /// <param name="parameter"></param>
        public delegate void OnExit(string methodName, MethodParameters parameter);
        /// <summary>
        /// 登录发生异常时调用方法
        /// </summary>
        /// <param name="methodName"></param>
        /// <param name="parameters"></param>
        /// <param name="ex"></param>
        public delegate void OnLogException(string methodName, Dictionary<string, object> parameters, Exception ex);
        /// <summary>
        /// 方法执行成功后需要注入的方法
        /// </summary>
        /// <param name="parameter"></param>
        public delegate void OnSuccess(MethodParameters parameter);
    }
}
